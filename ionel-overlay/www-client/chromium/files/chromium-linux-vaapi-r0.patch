Index: beta.vivid/content/common/gpu/media/gpu_video_decode_accelerator.cc
===================================================================
--- beta.vivid.orig/content/common/gpu/media/gpu_video_decode_accelerator.cc	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/common/gpu/media/gpu_video_decode_accelerator.cc	2015-05-21 12:52:25.198910462 -0400
@@ -30,7 +30,7 @@
 #include "content/common/gpu/media/dxva_video_decode_accelerator.h"
 #elif defined(OS_MACOSX)
 #include "content/common/gpu/media/vt_video_decode_accelerator.h"
-#elif defined(OS_CHROMEOS)
+#elif defined(OS_CHROMEOS) || defined(OS_LINUX)
 #if defined(USE_V4L2_CODEC)
 #include "content/common/gpu/media/v4l2_device.h"
 #include "content/common/gpu/media/v4l2_slice_video_decode_accelerator.h"
@@ -313,7 +313,7 @@
 scoped_ptr<media::VideoDecodeAccelerator>
 GpuVideoDecodeAccelerator::CreateV4L2SliceVDA() {
   scoped_ptr<media::VideoDecodeAccelerator> decoder;
-#if defined(OS_CHROMEOS) && defined(USE_V4L2_CODEC)
+#if (defined(OS_CHROMEOS) || defined(OS_LINUX)) && defined(USE_V4L2_CODEC)
   scoped_refptr<V4L2Device> device = V4L2Device::Create(V4L2Device::kDecoder);
   if (device.get()) {
     decoder.reset(new V4L2SliceVideoDecodeAccelerator(
@@ -342,7 +342,7 @@
 scoped_ptr<media::VideoDecodeAccelerator>
 GpuVideoDecodeAccelerator::CreateVaapiVDA() {
   scoped_ptr<media::VideoDecodeAccelerator> decoder;
-#if defined(OS_CHROMEOS) && defined(ARCH_CPU_X86_FAMILY)
+#if (defined(OS_CHROMEOS) || defined(OS_LINUX)) && defined(ARCH_CPU_X86_FAMILY)
   decoder.reset(new VaapiVideoDecodeAccelerator(
       make_context_current_, base::Bind(&GpuVideoDecodeAccelerator::BindImage,
                                         base::Unretained(this))));
Index: beta.vivid/content/common/gpu/media/gpu_video_encode_accelerator.cc
===================================================================
--- beta.vivid.orig/content/common/gpu/media/gpu_video_encode_accelerator.cc	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/common/gpu/media/gpu_video_encode_accelerator.cc	2015-05-21 12:52:25.198910462 -0400
@@ -19,7 +19,7 @@
 #include "media/base/limits.h"
 #include "media/base/video_frame.h"
 
-#if defined(OS_CHROMEOS)
+#if defined(OS_CHROMEOS) || defined(OS_LINUX)
 #if defined(USE_V4L2_CODEC)
 #include "content/common/gpu/media/v4l2_video_encode_accelerator.h"
 #endif
@@ -213,7 +213,7 @@
 scoped_ptr<media::VideoEncodeAccelerator>
 GpuVideoEncodeAccelerator::CreateV4L2VEA() {
   scoped_ptr<media::VideoEncodeAccelerator> encoder;
-#if defined(OS_CHROMEOS) && defined(USE_V4L2_CODEC)
+#if (defined(OS_CHROMEOS) || defined(OS_LINUX)) && defined(USE_V4L2_CODEC)
   scoped_refptr<V4L2Device> device = V4L2Device::Create(V4L2Device::kEncoder);
   if (device)
     encoder.reset(new V4L2VideoEncodeAccelerator(device));
@@ -225,7 +225,7 @@
 scoped_ptr<media::VideoEncodeAccelerator>
 GpuVideoEncodeAccelerator::CreateVaapiVEA() {
   scoped_ptr<media::VideoEncodeAccelerator> encoder;
-#if defined(OS_CHROMEOS) && defined(ARCH_CPU_X86_FAMILY)
+#if (defined(OS_CHROMEOS) || defined(OS_LINUX)) && defined(ARCH_CPU_X86_FAMILY)
   const base::CommandLine* cmd_line = base::CommandLine::ForCurrentProcess();
   if (!cmd_line->HasSwitch(switches::kDisableVaapiAcceleratedVideoEncode))
     encoder.reset(new VaapiVideoEncodeAccelerator());
Index: beta.vivid/content/content_common.gypi
===================================================================
--- beta.vivid.orig/content/content_common.gypi	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/content_common.gypi	2015-05-21 12:52:25.199910448 -0400
@@ -774,7 +774,7 @@
         '../third_party/libjingle/libjingle.gyp:libjingle',
       ],
     }],
-    ['use_v4lplugin==1 and chromeos==1', {
+    ['use_v4lplugin==1 and (chromeos==1 or desktop_linux==1)', {
       'defines': [
         'USE_LIBV4L2'
       ],
@@ -818,7 +818,7 @@
         },
       ],
     }],
-    ['chromeos==1 and use_v4l2_codec==1', {
+    ['(chromeos==1 or desktop_linux==1) and use_v4l2_codec==1', {
       'direct_dependent_settings': {
         'defines': [
           'USE_V4L2_CODEC'
@@ -863,7 +863,7 @@
         'common/gpu/media/tegra_v4l2_device.h',
       ],
     }],
-    ['target_arch != "arm" and chromeos == 1', {
+    ['target_arch != "arm" and (chromeos == 1 or desktop_linux == 1)', {
       'dependencies': [
         '../media/media.gyp:media',
         '../third_party/libyuv/libyuv.gyp:libyuv',
Index: beta.vivid/content/content_gpu.gypi
===================================================================
--- beta.vivid.orig/content/content_gpu.gypi	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/content_gpu.gypi	2015-05-21 12:52:25.199910448 -0400
@@ -36,7 +36,7 @@
         ],
       },
     }],
-    ['target_arch!="arm" and chromeos == 1', {
+    ['target_arch!="arm" and (chromeos == 1 or desktop_linux == 1)', {
       'include_dirs': [
         '<(DEPTH)/third_party/libva',
       ],
Index: beta.vivid/content/content_tests.gypi
===================================================================
--- beta.vivid.orig/content/content_tests.gypi	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/content_tests.gypi	2015-05-21 12:52:25.200910434 -0400
@@ -1661,7 +1661,7 @@
           },
         ]
     }],
-    ['chromeos==1 and target_arch != "arm"', {
+    ['(chromeos==1 or desktop_linux==1) and target_arch != "arm"', {
       'targets': [
           {
             'target_name': 'vaapi_h264_decoder_unittest',
Index: beta.vivid/content/public/common/content_switches.cc
===================================================================
--- beta.vivid.orig/content/public/common/content_switches.cc	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/public/common/content_switches.cc	2015-05-21 12:52:25.201910420 -0400
@@ -935,7 +935,7 @@
 // Disable web audio API.
 const char kDisableWebAudio[]               = "disable-webaudio";
 
-#if defined(OS_CHROMEOS)
+#if defined(OS_CHROMEOS) || defined(OS_LINUX)
 // Disables panel fitting (used for mirror mode).
 const char kDisablePanelFitting[]           = "disable-panel-fitting";
 
Index: beta.vivid/content/public/common/content_switches.h
===================================================================
--- beta.vivid.orig/content/public/common/content_switches.h	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/public/common/content_switches.h	2015-05-21 12:52:25.202910405 -0400
@@ -269,7 +269,7 @@
 
 CONTENT_EXPORT extern const char kDisableWebAudio[];
 
-#if defined(OS_CHROMEOS)
+#if defined(OS_CHROMEOS) || defined(OS_LINUX)
 CONTENT_EXPORT extern const char kDisablePanelFitting[];
 CONTENT_EXPORT extern const char kDisableVaapiAcceleratedVideoEncode[];
 #endif
Index: beta.vivid/media/media.gyp
===================================================================
--- beta.vivid.orig/media/media.gyp	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/media/media.gyp	2015-05-21 12:52:25.202910405 -0400
@@ -739,7 +739,7 @@
           ],
         }],
         # For VaapiVideoEncodeAccelerator.
-        ['target_arch != "arm" and chromeos == 1', {
+        ['target_arch != "arm" and (chromeos == 1 or desktop_linux == 1)', {
           'sources': [
             'filters/h264_bitstream_buffer.cc',
             'filters/h264_bitstream_buffer.h',
@@ -1368,7 +1368,7 @@
             }],
           ],
         }],
-        ['target_arch != "arm" and chromeos == 1 and use_x11 == 1', {
+        ['target_arch != "arm" and (chromeos == 1 or desktop_linux == 1) and use_x11 == 1', {
           'sources': [
             'filters/h264_bitstream_buffer_unittest.cc',
           ],
Index: beta.vivid/gpu/config/software_rendering_list_json.cc
===================================================================
--- beta.vivid.orig/gpu/config/software_rendering_list_json.cc	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/gpu/config/software_rendering_list_json.cc	2015-05-21 12:52:25.202910405 -0400
@@ -481,17 +481,6 @@
       ]
     },
     {
-      "id": 48,
-      "description": "Accelerated video decode is unavailable on Linux",
-      "cr_bugs": [137247],
-      "os": {
-        "type": "linux"
-      },
-      "features": [
-        "accelerated_video_decode"
-      ]
-    },
-    {
       "id": 49,
       "description": "NVidia GeForce GT 650M can cause the system to hang with flash 3D",
       "cr_bugs": [140175],
Index: beta.vivid/content/common/sandbox_linux/bpf_gpu_policy_linux.cc
===================================================================
--- beta.vivid.orig/content/common/sandbox_linux/bpf_gpu_policy_linux.cc	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/common/sandbox_linux/bpf_gpu_policy_linux.cc	2015-05-21 12:52:25.203910390 -0400
@@ -94,7 +94,7 @@
 
 bool IsAcceleratedVaapiVideoEncodeEnabled() {
   bool accelerated_encode_enabled = false;
-#if defined(OS_CHROMEOS)
+#if defined(OS_CHROMEOS) || defined(OS_LINUX)
   const base::CommandLine& command_line =
       *base::CommandLine::ForCurrentProcess();
   accelerated_encode_enabled =
@@ -296,6 +296,7 @@
     if (IsAcceleratedVaapiVideoEncodeEnabled() ||
         IsAcceleratedVideoDecodeEnabled()) {
       const char* I965DrvVideoPath = NULL;
+      VLOG(1) << "Attempting to enable hardware video acceleration.";
 
       if (IsArchitectureX86_64()) {
         I965DrvVideoPath = "/usr/lib64/va/drivers/i965_drv_video.so";
Index: beta.vivid/chrome/browser/about_flags.cc
===================================================================
--- beta.vivid.orig/chrome/browser/about_flags.cc	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/chrome/browser/about_flags.cc	2015-05-21 12:52:25.204910375 -0400
@@ -986,7 +986,7 @@
   { "disable-accelerated-video-decode",
     IDS_FLAGS_DISABLE_ACCELERATED_VIDEO_DECODE_NAME,
     IDS_FLAGS_DISABLE_ACCELERATED_VIDEO_DECODE_DESCRIPTION,
-    kOsMac | kOsWin | kOsCrOS,
+    kOsAll,
     SINGLE_VALUE_TYPE(switches::kDisableAcceleratedVideoDecode),
   },
 #if defined(USE_ASH)
Index: beta.vivid/content/common/gpu/media/vaapi_wrapper.cc
===================================================================
--- beta.vivid.orig/content/common/gpu/media/vaapi_wrapper.cc	2015-05-21 12:52:25.247909751 -0400
+++ beta.vivid/content/common/gpu/media/vaapi_wrapper.cc	2015-05-21 12:52:25.205910361 -0400
@@ -142,7 +142,7 @@
     VAProfile va_profile,
     const base::Closure& report_error_to_uma_cb) {
   if (!profile_infos_.Get().IsProfileSupported(mode, va_profile)) {
-    DVLOG(1) << "Unsupported va_profile: " << va_profile;
+    VLOG(1) << "Unsupported va_profile: " << va_profile;
     return nullptr;
   }
 
@@ -360,7 +360,7 @@
   if (std::find(supported_entrypoints.begin(),
                 supported_entrypoints.end(),
                 entrypoint) == supported_entrypoints.end()) {
-    DVLOG(1) << "Unsupported entrypoint";
+    VLOG(1) << "Unsupported entrypoint";
     return false;
   }
   return true;
@@ -384,8 +384,8 @@
     if (attribs[i].type != required_attribs[i].type ||
         (attribs[i].value & required_attribs[i].value) !=
             required_attribs[i].value) {
-      DVLOG(1) << "Unsupported value " << required_attribs[i].value
-               << " for attribute type " << required_attribs[i].type;
+      VLOG(1) << "Unsupported value " << required_attribs[i].value
+              << " for attribute type " << required_attribs[i].type;
       return false;
     }
   }
